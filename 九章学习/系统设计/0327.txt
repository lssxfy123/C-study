1.高可用

可用性高，即使部分的机器出现故障，也不影响整体的性能

2.埋点

3.清晰度转码

 av.mp4 ->  4K  
            1080P
            流畅 480P

4.断电续传的next_chuck_id信息存在哪？

   （1）存储在数据库表中
   （2）Redis，数据变化比较频繁


5.请问为什么不让用户自己用指定的工具/服务进行转码，然后用户自己把转码好的文件从客户端上传到文件服务器？

 用户体验

  （1）直接上传，什么都不用管，事情都在服务器上做
  （2）用户自己用指定的工具/服务进行转码，然后用户自己把转码好的文件从客户端上传到文件服务器


6.好吧，看来是关系型数据库。如果像youtube这么大的体量，它的关系行数据库也需要是分布式的吧？
  文件系统，非关系型，视频 图片 音频 文档， 分布式文件系统 阿里云 亚马逊  （不断地扩展，机器可以不断加，没有容量限制）
  关系型，数据，分库分表


7.埋点如何记录用户的习惯，用来谁知道多少时间删除未上传完成的视频，可以举个例子吗？

 淘宝，往购物车添加过多少次商品，再回去提交订单
 你在订单确认页，停留多长时间，才去提交订单



 8.老师讲的这个方法意味着完全single-thread，并且是按chunk顺序上传？请问这个还是目前的主流做法吗？
single-thread ，  慢，能够提升系统服务用户的数量

多线程，快，

系统的处理

假设 1S  10个文件上传

单线程，同时服务10个人



9.为什么要用哈希算法生成chunk_id, 直接用数组下标不就可以了吗？

整个视频文件，哈希值

多个chunk 哈希，整个文件的哈希，只需要把各个文件块的哈希 计算一下就行了，减少计算量

10.视频流的流服务是怎么做的？就是点Play之后那个流

 视频流，推荐 ，机器学习
 就是点Play之后那个流，视频播放的过程


 11.如何提高观看视频的流畅度？
 双线程，一个播放，一个下载
 大量缓存


12.CDN 

用空间换时间，用大量的存储空间减少访问的时间


13，二八原理

14.CDN的数据之间需要同步吗

不需要

CDN和中心服务器的同步


15.当网络不是很好的时候，我们会发现有时候回切换到精度更低的模式，这样看起来，不同精度之间是能切换的。这是不是意味着不同精度的视频在存储端都按照同一个时间线来分块，只有这样才可以相对容易的在不同精度间切换？

一般都是按照同一个时间线，难度最低的，复杂度也是最低的

16.如何保证CDN上的数据是最新的？
当视频文件，发生修改，（删除，修改），通知所有的CDN，去删除或者去取最新的数据

17.针对这个，用redis的多，还是数据库的多？

数据库，视频网站 数据都是修改频率比较小的

18.现在的存储服务本身已经支持multi-part upload了，比如S3，是不是就不用在又客户端实现这个分块和断点续传方法了？

本质都是一样的，都是用了 分块和断点续传

19.存储缩略图的系统不可以选择s3吗？请问为什么
S3 云服务名称，底层会有多个文件系统格式

20.老师我问的是next chunk id用redis多还是数据库多？
Redis

21.在youtube上，通常首页上会有很多个视频（播放历史或者推荐视频），请问在进入该页面时，是否已经开始从服务器下载比如1-2分钟的视频？如果是的话，那这一页的流量有点大啊？
不会的把都下载下来，只会把那个非常热的，极少数的视频 提前的下载一点点

22.文件上传成功之后谁来通知数据库？
程序自己会去判断是否上传成功，上传成功之后就会按照代码去做事情了





